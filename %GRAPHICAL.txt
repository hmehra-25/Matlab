%GRAPHICAL

clc
clear all

%Phase 1: i/p parameters
c=[2 3];                       %maximize function ke parameters
A=[-1 3; 1 1; 1 -1];
b=[10; 6; 2];

%Phase 2:Plotting Lines
p=max(b);
x1=0:1:p;
x21=(b(1)-A(1,1).*x1)/A(1,2);

% .* for multiplication with every element in array
%(b1-a11x1)/a12
x22=(b(2)-A(2,1).*x1)/A(2,2);
x23=(b(3)-A(3,1).*x1)/A(3,2);
x21=max(0,x21);
x22=max(0,x22);
x23=max(0,x23);

plot(x1,x21,'r',x1,x22,'b',x1,x23,'k')

%r: red, b: blue, k:black

title('x1 vs x2')
xlabel('value of x1')
ylabel('value of x2')
legend('x1+2x2=10','x1+x2=6','x1-2x2=1')

%Phase 3: Find corner points with axis
cx=find(x1==0);
c1=find(x21==0);
c2=find(x22==0);
c3=find(x23==0);
line1=[x1(:,[c1 cx]);x21(:,[c1 cx])]'
line2=[x1(:,[c2 cx]);x22(:,[c2 cx])]'
line3=[x1(:,[c3 cx]);x23(:,[c3 cx])]'
corpt=unique([line1;line2;line3],'rows');

%Phase 4:Intersecting Points which do not lie on the axis

pt=[0;0];
for i=1:size(A,1)% no of constraints , (A,1) 1 denotes rows 2 denotes col
    A1=A( i,:)
    B1=b( i,:)
    for j=i+1:size(A,1)
       A2=A( j,:)
       B2=b( j,:)
       A3=[A1;A2]
       B3=[B1;B2]
       X= A3\ B3
       pt=[pt X]
    end
end
ipt=pt';

% Phase 5: 

point=unique([corpt;ipt],'rows')

%phase 6: feasible region 
for i=1:size(point,1)
    constraint1(i)=A(1,1)* point(i,1)+ A(1,2)*point(i,2)-b(1);
    constraint2(i)=A(2,1)* point(i,1)+ A(2,2)*point(i,2)-b(2);
    constraint3(i)=A(3,1)* point(i,1)+ A(3,2)*point(i,2)-b(3);
end
    s1=find(constraint1>0);
    s2=find(constraint2>0);
    s3=find(constraint3>0);
    s= unique([s1,s2,s3]);
  
    point(s,:)=[];
    value = point* c';
    [obj,index]=max(value)
    optimalsol=point(index,:)
    x1=point(point(index,1));
    x2=point(point(index,2));
    
    table=[point value]
   % give labels to table